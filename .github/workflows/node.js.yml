# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

env:
  CI: false
  REACT_APP_APIKEY: '${{ secrets.REACT_APP_APIKEY }}'
  REACT_APP_AUTHDOMAIN: '${{ secrets.REACT_APP_AUTHDOMAIN }}'
  REACT_APP_PROJECTID: '${{ secrets.REACT_APP_PROJECTID }}'
  REACT_APP_STORAGEBUCKET: '${{ secrets.REACT_APP_STORAGEBUCKET }}'
  REACT_APP_MESSAGESENDERID: '${{ secrets.REACT_APP_MESSAGESENDERID }}'
  REACT_APP_APPID: '${{ secrets.REACT_APP_APPID }}'
  REACT_APP_MEASUREMENTID: '${{ secrets.REACT_APP_MEASUREMENTID }}'
  REACT_APP_WEBHOOK_URL: '${{ secrets.REACT_APP_WEBHOOK_URL }}'

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - run: npm install
    - run: npm run build
    - uses: FirebaseExtended/action-hosting-deploy@v0
      with:
        repoToken: '${{ secrets.GITHUB_TOKEN }}'
        firebaseServiceAccount: '${{ secrets.FIREBASE_SERVICE_ACCOUNT_FFXIV_INVENTORY }}'
        channelId: live
        projectId: ffxiv-inventory
    - name: Debug Environment Variables
      run: |
        echo "APIKEY: ${{ secrets.REACT_APP_APIKEY }}"
        echo "AUTHDOMAIN: ${{ secrets.REACT_APP_AUTHDOMAIN }}"
